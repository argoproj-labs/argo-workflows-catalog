  
# Credit for this implementation goes to @dlorenc based on the same task in the Tekton Catalog
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  annotations:
    workflows.argoproj.io/description: This task sends a simple email to receivers via SMTP server.
    workflows.argoproj.io/maintainer: '@dcherman'
    workflows.argoproj.io/tags: sendmail,smtp,email
    workflows.argoproj.io/version: '>= 2.9.0'
  name: sendmail
spec:
  entrypoint: sendmail
  templates:
  - name: sendmail
    inputs:
      parameters:
        - name: sender
        - name: body
        - name: subject
        - name: recipients
        - name: smtp-secret
    script:
      image: python:3.8-alpine
      command: [python]
      env:
        - name: USER
          valueFrom:
            secretKeyRef:
              name: "{{inputs.parameters.smtp-secret}}"
              key: user
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{inputs.parameters.smtp-secret}}"
              key: password
        - name: TLS
          valueFrom:
            secretKeyRef:
              name: "{{inputs.parameters.smtp-secret}}"
              key: tls
        - name: SERVER
          valueFrom:
            secretKeyRef:
              name: "{{inputs.parameters.smtp-secret}}"
              key: url
        - name: PORT
          valueFrom:
            secretKeyRef:
              name: "{{inputs.parameters.smtp-secret}}"
              key: port
      source: |
        import smtplib, ssl, os
        
        port = os.getenv('PORT')
        smtp_server = os.getenv('SERVER')
        sender_email = "{{inputs.parameters.sender}}"
        receiver_emails = "{{inputs.parameters.recipients}}"
        user = os.getenv('USER')
        password = os.getenv('PASSWORD')
        tls = os.getenv('TLS')
        message = f"""\
        Subject: {{inputs.parameters.subject}}
        To: {receiver_emails}
        From: {sender_email}

        {{inputs.parameters.body}}"""

        print(message)
        if tls == 'True':
            context = ssl.create_default_context()
            server = smtplib.SMTP_SSL(smtp_server, port, context=context)
        else:
            server = smtplib.SMTP(smtp_server, port)
        if password != '':
            server.login(user, password)
        for receiver in receiver_emails.split(' '):
            server.sendmail(sender_email, receiver, message)
        server.quit()
